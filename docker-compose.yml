services:
  frontend: 
    container_name: film-frontend
    build: 
      context: ./frontend
      dockerfile: Dockerfile.frontend
    volumes:
      - frontend-volume:/frontend/dist
    image: ghcr.io/daniildd-kh/film-react-nest-frontend:latest
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - app-network

  backend: 
    container_name: film-backend
    build: 
      context: ./backend
      dockerfile: Dockerfile.backend
    env_file:
      - ./backend/.env
    image: ghcr.io/daniildd-kh/film-react-nest-backend:latest
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - app-network

  postgres: 
    container_name: film-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: prac
      POSTGRES_USER: prac
      POSTGRES_DB: prac
      PGDATA: /postgresql/pgdata
    volumes:
      - ./backend/test:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"

  nginx:
    container_name: film-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
    image: ghcr.io/daniildd-kh/film-app-nginx:latest
    ports:
      - "80:80"
    volumes:
      - frontend-volume:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: film-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.ru
      - PGADMIN_DEFAULT_PASSWORD=admin
    networks:
      - app-network
    ports:
      - "8080:80"
    depends_on:
      - postgres 

volumes:
  frontend-volume:
  db-data:

networks:
  app-network:
    driver: bridge
